@model IEnumerable<PikaShop.Web.ViewModels.CartItemViewModel>;
@using PikaShop.Web.ViewModels


@{
    ViewData["Title"] = "Checkout";
}

<h1>Checkout</h1>

<table class="table">
    <thead>
        <tr>
            <th>Product Image</th>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Total Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td><img src="@item.ProductImage" alt="@item.ProductName" /></td>
                <td>@item.ProductName</td>
                <td>@item.Quantity</td>
                <td>@item.Price.ToString("C")</td>
                <td>@item.TotalPrice.ToString("C")</td>
            </tr>
        }
    </tbody>
</table>

<h2>Total Price: @ViewBag.TotalPrice.ToString("C")</h2>

<form id="payment-form">
    <div id="card-element">
        <!-- Elements will create input elements here -->
    </div>

    <!-- We'll put the error messages in this element -->
    <div id="card-errors" role="alert"></div>

    <button id="submit">Submit Payment</button>
</form>

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        var stripe = Stripe('@ViewBag.StripePublishableKey');
        var elements = stripe.elements();

        var card = elements.create('card');
        card.mount('#card-element');

        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    stripeTokenHandler(result.token);
                }
            });
        });

        function stripeTokenHandler(token) {
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            form.submit();
        }
    </script>
}
